% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/TR_data_proc.R
\name{TR_data_proc}
\alias{TR_data_proc}
\title{Transpiration data processing}
\usage{
TR_data_proc(
  lc_data = NULL,
  pe_data = NULL,
  wth_data = NULL,
  sensor_data = NULL,
  lastDate = NULL,
  irrg.dts = NULL,
  skew_test = TRUE,
  get_feature_h2 = FALSE,
  res_path = NULL
)
}
\arguments{
\item{lc_data}{\code{data.frame} representing the load cell data information
containing the following columns (variables):
\describe{
\item{\code{sector}}{a character vector describing the sector position in
format (A-G)-X-YY (need to be check).}
\item{\code{genotype}}{a numeric or character vector indicating the
genotype numbers.}
\item{\code{g_alias}}{a character vector indicating the genotype identifiers.}
\item{\code{treatment}}{a character vector indicating the experiment treatment.
If not available set to NA.}
\item{\code{timestamp}}{a character vector indicating the time of measurement in format yyyy-mm-dd hh:mm:ss.}
\item{\code{Mass..g}}{a integer vector indicating the weight (mass) measured in g.}
}
The column names must be strictly equivalent to the one specified:
'sector', 'genotype', 'g_alias', 'treatment', 'timestamp', 'Mass..g'.
Default = NULL.}

\item{pe_data}{\code{data.frame} representing the plant eye data information
containing the following columns (variables):

\describe{
\item{\code{sector}}{a character vector describing the sector position in
format (A-G)-X-YY (need to be checked).}
\item{\code{genotype}}{a numeric or character vector indicating the genotype numbers.}
\item{\code{replicate}}{a numeric vector indicating the replication number.
If not available or not existing set to NA.}
\item{\code{timestamp}}{a character vector indicating the time of measurement
in format yyyy-mm-dd hh:mm:ss.}
\item{\code{leaf_area}}{a integer vector indicating the leaf area.}
}

The column names must be strictly equivalent to the one specified:
'sector', 'genotype', 'replicate', 'timestamp', 'leaf_area'. Default = NULL.}

\item{wth_data}{\code{data.frame} representing the weather data information
containing the following columns (variables):

\describe{
 \item{\code{sensor}}{a character vector describing the sensor information}
 \item{\code{variable}}{a character vector indicating the type of weather information. Must be one of: Temperature (Â°C), Relative humidity (\%)), Windspeed average (m/s), Windspeed max (m/s), Solar radiation (W/(s*mÂ²)), Precipitation (mm), or Wind direction (Â°).}
 \item{\code{timestamp}}{a character vector indicating the time of measurement in format yyyy-mm-dd hh:mm:ss.}
 \item{\code{value}}{a numeric vector indicating the variable value.}
}

The column names must be strictly equivalent to the one specified:
'sensor', 'variable', 'timestamp', 'value'. Default = NULL.}

\item{sensor_data}{\code{data.frame} representing the sensor data information
containing the following columns (variables):

\describe{
 \item{\code{sector}}{a character vector describing the sector position.}
 \item{\code{sensor}}{a character vector indicating the sensor information.}
}

The column names must be strictly equivalent to the one specified:
'sector', 'sensor'. Default = NULL.}

\item{lastDate}{\code{character} string indicating the last day of the
experiment. If not specified, it will be set as the last date find
in the lc_data minus one day. Default = NULL.}

\item{irrg.dts}{\code{Character vector} of irrigation dates, each date mentioned as
in YYYY-MM-DD format. If no such date is needed, same as the last date.
Default = NULL.}

\item{skew_test}{\code{Logical value} specifying if skewness test
should be used to filter weather data. Default = TRUE.}

\item{get_feature_h2}{\code{Logical value} specifying if the heritability
of the features (using gam function) should be calculated? Default = FALSE.}

\item{res_path}{path location where the results will be saved. Default = NULL.}
}
\value{
Return:

A \code{list} that contain two lists: one for the raw transpiration results,
the other for the smooth transpiration results. In both case. the list contains
the following features organised per genotype and per day
(example for results from TR raw):

 \item{TR_raw}{Transpiration per genotype and time point (here every 15min)}
 \item{Max_TR_raw}{Maximum transpiration per genotype and per day}
 \item{slope_6pt_bfr_maxTR_raw}{Slope of the curvature between 6 data points (90 min)}
 \item{slope_00_07_raw}{slope of the curve between 00:00 and 07:00}
 \item{slope_07_maxTR_raw}{slope of the curve between 07:00 and maxTR}
 \item{slope_19h_23h45_raw}{slope of the curve between 19:00 and 23:45}
 \item{curve_maxTR_raw}{curvature or angle of the curve at maxTR}
 \item{total_auc_raw}{Total area under the curve}
 \item{auc_10h_15h_raw}{area under the curve 10-15h}
 \item{sd_10h_15h_raw}{standard deviation TR values 10-15h}
 \item{prop_auc_10h_15h_raw}{proportion of area under the curve between 10-15h}
 \item{auc_7h_19h_raw}{Total area under the curve between 07:00 and 19:00}
 \item{sd_7h_19h_raw}{standard deviation TR values between 07:00 and 19:00}
 \item{prop_auc_7h_19h_raw}{proportion of area under the curve between 07:00 and 19:00}
 \item{auc_night_raw}{Area under the curve during the night}
 \item{sim_ETobs_ETPenMont_raw}{similarity between the ETr profile and the Penman Monteith ET}
}
\description{
Processing of the transpiration data collected on the load cells of the
LeasyScan platform.
}
\details{
The processing procedure is divided in three stages.

\strong{Stage 1.} The first stage start by the organisation of the data in
a certain format (extractRawLCmatrix()). Then the pipeline move with
a series of operations to detect outliers,
remove extreme values, and impute missing observations
(curateRawLC(), filterLCExtremeCols(), imputed.DF.final()). After that,
the function also filters the sectors for extreme value behaviour if the
moments of their distribution (0, 25, 50, 75, and 100\% quantiles) are
all outlying compared to the rest of the sector distribution values
(FilterLCExtremeCols()).

Then the pipeline produce a first evapotranspiration (ETr_obs) profile for
each sectors (getETr()). The function use a one lag difference to build
the ETr profile. This profile will also be cleaned for extreme observations.
using the same approach as before (comparison of the moments of the
distribution).

\strong{Stage 2} The first objective of the second stage is to calculate
a reference ETr profile (ETr_wth) using the weather information and the Penman-Monteith
equation. To realize that, the pipeline goes throught the following steps:
a) Organisation of the weather data information, b) calculation of
ETr_wth, c) remove the day with irrigation, d) Filtering of Etr_obs using ETr_wth to get ETr_filt
(calculation of r = ETr_wth/ETr_obs, values with r > 1 for day time (06:30-18:30)
and r > 1.5 for night time (18:30-06:30) are filtered), e) Use ETr_filt
to construct a first raw TR profile (TR_raw), and f) calculate the
raw TR parameters from TR_raw (See Value section for parameter definition). 

\strong{Stage 3} In this step, TR_raw time series are smoothed (TR_smth).
Then the same parameters are extracted but from TR_smth.
}
\examples{

library(plyr)

data(lc_data)
data(pe_data)
data(wth_data)
data(sensor_data)

\dontrun{

TR_res <- TR_data_proc(lc_data = lc_data, pe_data = pe_data,
wth_data = wth_data, sensor_data = sensor_data,
lastDate = '2018-03-06', skew_test = FALSE, res_path = getwd())

}

}
\references{
Kar, S., Tanaka, R., Korbu, L. B., Kholova, J., Iwata, H., Durbha, S. S., ...
& Vadez, V. (2020). Automated discretization of ‘transpiration restriction
to increasing VPD’features from outdoors high-throughput phenotyping data.
Plant methods, 16(1), 1-20.
}
\author{
Soumyashree Kar, ICRISAT-GEMS
}
